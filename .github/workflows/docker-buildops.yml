name: Docker Image Builds

on:
  schedule:
    - cron: '30 */12 * * *'
  push:
    paths:
      - docker/**
      - .github/workflows/docker-buildops.yml
  pull_request:
    branches: [ "main" ]
    paths:
      - docker/**

env:
  IMAGE_NAME_PREFIX: ${{ github.repository }}

permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          recursive: true
          trusted-registries: quay.io, ghcr.io,docker.io,dock.mau.dev,index.docker.io,registry-1.docker.io
        continue-on-error: true
  mkdocs-material:
    name: Custom image on Material for Mkdocs
    runs-on: ubuntu-latest
    needs: [ lint ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Load secrets with dotenvx
        uses: andreijiroh-dev/dotenvx-action@v0.2.0
        if: github.event_name != 'pull_request'
        id: dotenvx
        with:
          path: .env.ci
          key: ${{ secrets.DOTENV_PRIVATE_KEY_CI }}

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ steps.dotenvx.outputs.DOCKER_USERNAME }}
          password: ${{ steps.dotenvx.outputs.DOCKER_PASSWORD }}
      - name: Log into GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ steps.dotenvx.outputs.GHCR_BOT_USERNAME }}
          password: ${{ steps.dotenvx.outputs.GHCR_BOT_PASSWORD }}
      - name: Log into RHQCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ steps.dotenvx.outputs.RHQCR_BOT_USERNAME }}
          password: ${{ steps.dotenvx.outputs.RHQCR_BOT_PASSWORD }}
      - name: Login into GLCR on mau.dev
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: dock.mau.dev
          username: ${{ steps.dotenvx.outputs.GLCR_MAUDEV_BOT_USERNAME }}
          password: ${{ steps.dotenvx.outputs.GLCR_MAUDEV_BOT_PASSWORD }}
      
      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAME_PREFIX }}/mkdocs-material
            dock.mau.dev/${{ env.IMAGE_NAME_PREFIX }}/mkdocs-material
            quay.io/andreijiroh-dev/mkdocs-material
            index.docker.io/ajhalili2006/mkdocs-material
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,enable=true,priority=100,prefix=commit-,suffix=,format=long
            type=schedule,pattern=nightly
            type=schedule,prefix=nightly-,pattern={{date 'YYYYMMDDhhmmss'}}
            type=raw,prefix=branch-,value={{branch}}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: "Build and push Docker image [nightly builds]"
        if: github.event_name == 'schedule'
        id: nightly-build
        uses: docker/build-push-action@v4.1.1
        with:
          context: docker/mkdocs-material
          #file: Dockerfile
          # workaround: https://github.com/moby/buildkit/issues/2713#issuecomment-1068540101
          push: true
          #load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=buildkit-mkdocs-material
          cache-to: type=gha,mode=max,scope=buildkit-mkdocs-material
      
      - name: Build and push Docker image
        if: github.event_name != 'schedule'
        id: build
        uses: docker/build-push-action@v4.1.1
        with:
          context: docker/mkdocs-material
          #file: Dockerfile
          # workaround: https://github.com/moby/buildkit/issues/2713#issuecomment-1068540101
          push: ${{ github.event_name != 'pull_request' }}
          #load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-to: type=gha,mode=max,scope=buildkit-mkdocs-material

      # ...and then generate a build attestation via actions/attest-build-provenance workflow.
      - name: "Generate attestation for GitHub API access [nightly builds]"
        uses: actions/attest-build-provenance@v1
        if: ${{ github.event_name == 'schedule' }}
        id: attest-nightly-builds
        with:
          subject-path: ${{ steps.meta.outputs.tags }}
          subject-digest: ${{ steps.nightly-build.outputs.digest }}
          push-to-registry: true

      - name: Generate image attestation
        uses: actions/attest-build-provenance@v1
        if: ${{ github.event_name == 'push' }}
        id: attest
        with:
          subject-path: ${{ steps.meta.outputs.tags }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true
  pkgops-alpine:
    name: "Alpine Linux - aports package maintainer image"
    runs-on: ubuntu-latest
    needs: [ lint ]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Load secrets with dotenvx
      uses: andreijiroh-dev/dotenvx-action@v0.2.0
      if: github.event_name != 'pull_request'
      id: dotenvx
      with:
        path: .env.ci
        key: ${{ secrets.DOTENV_PRIVATE_KEY_CI }}

    # Workaround: https://github.com/docker/build-push-action/issues/461
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v2
      with:
        buildkitd-flags: --debug

    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ steps.dotenvx.outputs.DOCKER_USERNAME }}
        password: ${{ steps.dotenvx.outputs.DOCKER_PASSWORD }}
    - name: Log into GHCR
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ steps.dotenvx.outputs.GHCR_BOT_USERNAME }}
        password: ${{ steps.dotenvx.outputs.GHCR_BOT_PASSWORD }}
    - name: Log into RHQCR
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ steps.dotenvx.outputs.RHQCR_BOT_USERNAME }}
        password: ${{ steps.dotenvx.outputs.RHQCR_BOT_PASSWORD }}
    - name: Login into GLCR on mau.dev
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: dock.mau.dev
        username: ${{ steps.dotenvx.outputs.GLCR_MAUDEV_BOT_USERNAME }}
        password: ${{ steps.dotenvx.outputs.GLCR_MAUDEV_BOT_PASSWORD }}
    
    # Install the cosign tool except on PR
    # https://github.com/sigstore/cosign-installer
    - name: Install cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
      with:
        cosign-release: 'v2.2.4'

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ env.IMAGE_NAME_PREFIX }}/pkgops-alpine
          dock.mau.dev/${{ env.IMAGE_NAME_PREFIX }}/pkgops-alpine
          quay.io/andreijiroh-dev/pkgops-alpine
          index.docker.io/ajhalili2006/pkgsops-alpine
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,enable=true,priority=100,prefix=commit-,suffix=,format=long
          type=schedule,pattern=nightly
          type=schedule,prefix=nightly-,pattern={{date 'YYYYMMDDhhmmss'}}
          type=raw,prefix=branch-,value={{branch}}

    - name: Build and push image
      uses: docker/build-push-action@v4
      id: build
      with:
        context: docker/pkgops-alpine
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    
    - name: Generate image attestation
      uses: actions/attest-build-provenance@v1
      if: ${{ github.event_name == 'push' }}
      id: attest
      with:
        subject-path: ${{ steps.meta.outputs.tags }}
        subject-digest: ${{ steps.build.outputs.digest }}
        push-to-registry: true